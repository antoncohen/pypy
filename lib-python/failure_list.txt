test name           !=must fix      guess at failure cause or difficulty
-------------------------------------------------------------------------------------------
test__locale                 !   wrong locale installation on wyvern
                                 install correct locale on wyvern :-)
                                 <arigo> I don't understand the above comment:
                                 test__locale passes on python2.5 but fails
                                 on pypy-c, so surely there is another problem?

test_ast                         import _ast
test_bigmem                  !   one looks like bug, the others like impl details
test_builtin                     this is our issue383
test_cProfile                !   we still need to fix module/cProfile to respect builtin calls
test_capi                        CPython only
test_code                        obscure differences in code objects produced by compiler
test_codeccallbacks          !   unknown
test_codecs                  !   unknown
test_coding                  !   hah.  fix buildbot :-/
test_coercion            arigo   look at test_prefix_binops, the other is probably too obscure
                                 problem with prebuilt objects being equal in result list creation

test_commands                !   unknown
test_compile                 !   test_leading_newlines: impl detail; the rest: not good
test_compiler                !   unknown
test_contextlib              !   should be fixed, probably not too hard
test_ctypes                  !   implementation details but also some real crashes
test_datetime                !   the two test_negative_*() look like real bugs
test_decimal                     missing decimal.ROUND_05UP
test_descr               arigo   needs deciding what is impl details and what's not
test_descrtut                    implementation detail only
test_dis                         probably not worth the pain of whacking at the compiler
test_distutils                   this is our issue367
test_doctest                 !   unknown
test_dumbdbm                 !   oups? looks unexpected
test_email                   !   annoying failures, look at me
test_email_codecs                test skipped
test_email_renamed           !   same as test_email
test_enumerate                   same as test_iterlen
test_exception_variations    !   uh?
test_file                        some more exceptions should be raised
test_float                       float.__getformat__() exists mainly only for tests
test_fork1                   !   why did this fail just once?
test_format                      test checking for exact exception messages
test_funcattrs               !   easy to add this new attribute
test_functools               !   missing gc.collect(); some impl details; del p.__dict__?
test_gc                          internal stuff, we may want to provide placeholders
test_generators              !   I really hate our bytecode compiler :-(
test_genexps                 !   Fatal RPython error: InternalCompilerError :-(
test_gettext                 !   check this use of unicode()
test_grammar                     implementation detail
test_hmac                    !   looks bad!
test_import                      importing from pyc-files-without-py-file disabled by default
test_importhooks             !   unknown
test_inspect                 !   test_wrapped_decorator: try to fix;  isbuiltin([].append): cry and maaaybe try to fix
test_ioctl                       missing os.getpgrp()
test_isinstance              !   mark the recursion limit tests as CPython-specific
test_iterlen                     somehow implementation detail (missing __length_hint__())
test_itertools                   same as test_iterlen
test_logging                 !   shallow.  let's just fix the __repr__ of types
test_long                    !   easy fixes
test_mailbox                 !   look at me
test_multibytecodec          !   unknown
test_mutants                     the test is probably too precise in the failure it expects
test_new                         new.instancemethod(x, None) should fail, but no hurry
test_normalization               test skipped
test_optparse                !   test needs some fixes, but still, some failures are strange
test_parser                      missing parser.compilest().  I don't think we care for now
test_peepholer                   implementation detail (might be useful to look, though)
test_pep277                      NT only
test_platform                !   we should ensure that our sys.version is compatible enough do that the unmodified _sys_version_parser regexp recognizes it
test_plistlib                    plistlib seems to be Mac only
test_poll                        easy fix, I suppose
test_profile                 !   why is the "profile.py" module not found??
test_pyclbr                  !   this import should find test/pyclbr_input.py
test_pyexpat                     is that an implementation detail?
test_quopri                  !   check if test_script{en,de}code() shows a real bug
test_random                      should probably be fixed, but no hurry i guess
test_re                          obscure, looks like yet another case not covered by test_sub_unicode in pypy/module/_sre/
test_repr                        implementation detail
test_sax                     !   unknown
test_sets                    !   is this another CPython implementation detail test?
test_shelve                  !   unknown
test_signal                  !   missing signal.alarm(), probably easy to add
test_site                    !   fix me
test_socket                  !   uh?
test_socketserver                test skipped
test_sort                        implementation detail
test_sqlite                  !   why no sqlite available?
test_startfile                   what is os.startfile?
test_str                 arigo   probably skip, investigate
test_string                  !   some failures, look deeper
test_structmembers               CPython-only
test_subprocess              !   missing resource.error.  no clue about os.fpathconf().
test_syntax                      more small hacking here and there in the ast compiler
test_sys                         missing sys._current_frames()
test_tarfile                 !   timeout?
test_thread                      the docs say it's ok to raise thread.error here, but maybe we need to have thread.stack_size() implemented anyway (no hurry I'd say)
test_threading                   the failure should be marked as CPython-only
test_time                    !   easy fix (either bogus test or bogus time.strftime())
test_timeout                     skipped test
test_trace                       probably all acceptable differences
test_traceback               !   don't care about '__members__', but check the other tests
test_tuple                   !   might be fixed now, check again
test_unicode                 !   some failures, look deeper
test_unicode_file                skipped test
test_unicodedata                 unknown to me (but xorAxAx and fijal have a better clue)
test_urllib2_localnet            bogus test?
test_urllib2net                  skipped test
test_urllibnet                   skipped test
test_userstring              !   unknown
test_uu                      !   unknown
test_wait3                       no os.wait3()
test_wait4                       no os.wait4()
test_weakref                     probably missing some gc.collect()
test_with                        minor hacking in the ast compiler
test_xml_etree_c                 import _elementtree
test_xmlrpc                      sys.setdefaultencoding missing
test_zipfile                 !   see test_struct
test_zipfile64                   skipped test
test_zipimport                   many failures.  the test itself seems not to run correctly

