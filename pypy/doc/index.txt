
Welcome to PyPy Development
=============================================

The PyPy project aims at producing a flexible and fast Python_
implementation.  The guiding idea is to translate a Python-level
description of the Python language itself to lower level languages.
Rumors have it that the secret goal is being faster-than-C which is
nonsense, isn't it?  `more...`_

.. toctree::
   :maxdepth: 2

   .. The following stuff has not yet been categorized:

   sandbox.txt
   sprint-reports.txt
   stackless.txt
   statistic/index.txt
   svn-help.txt
   theory.txt
   translation.txt
   translation-aspects.txt
   video-index.txt
   windows.txt
   discussion/GC-performance.txt
   discussion/VM-integration.txt
   discussion/chained_getattr.txt
   discussion/cli-optimizations.txt
   discussion/cmd-prompt-translation.txt
   discussion/compiled-swamp.txt
   discussion/ctypes_modules.txt
   discussion/ctypes_todo.txt
   discussion/distribution.txt
   discussion/distribution-implementation.txt
   discussion/distribution-newattempt.txt
   discussion/distribution-roadmap.txt
   discussion/emptying-the-malloc-zoo.txt
   discussion/finalizer-order.txt
   discussion/gc.txt
   discussion/howtoimplementpickling.txt
   discussion/improve-rpython.txt
   discussion/outline-external-ootype.txt
   discussion/oz-thread-api.txt
   discussion/paper-wishlist.txt
   discussion/parsing-ideas.txt
   discussion/pypy_metaclasses_in_cl.txt
   discussion/removing-stable-compiler.txt
   discussion/security-ideas.txt
   discussion/somepbc-refactoring-plan.txt
   discussion/summer-of-pypy-pytest.txt
   discussion/testing-zope.txt
   discussion/thoughts_string_interning.txt
   discussion/translation-swamp.txt
   discussion/use_case_of_logic.txt



   .. STUFF THAT'S BEEN DONE

   .. This needs merging somehow:
   docindex.txt

   .. The following stuff is high-value and (vaguely) true:
   getting-started.txt
   getting-started-python.txt
   getting-started-dev.txt
   faq.txt
   architecture.txt
   coding-guide.txt
   cleanup-todo.txt
   cpython_differences.txt
   garbage_collection.txt
   interpreter.txt
   objspace.txt

   dev_method.txt
   download.txt
   extending.txt

   extradoc.txt
     .. ^^ integrate this one level up: dcolish?

   glossary.txt

   contributor.txt

   .. True, high-detail:
   interpreter-optimizations.txt
   configuration.txt
   low-level-encapsulation.txt
   parser.txt
   rlib.txt
   rtyper.txt
   jit/_ref.txt
   jit/index.txt
   jit/overview.txt
   jit/pyjitpl5.txt

   ctypes-implementation.txt
     .. ^^ needs attention

   how-to-release.txt
     .. ^^ needs attention

   index-report.txt
     .. ^^ of historic interest, and about EU fundraising

   maemo.txt
     .. ^^ obscure corner; not sure of status

   .. The following stuff is good material relating to unmaintained areas of the project:
      .. .Net stuff:
   cli-backend.txt
   clr-module.txt
   carbonpython.txt

   .. Release notes:
   release-0.6.txt
   release-0.7.0.txt
   release-0.8.0.txt
   release-0.9.0.txt
   release-0.99.0.txt
   release-1.0.0.txt
   release-1.1.0.txt
   release-1.2.0.txt
   release-1.3.0.txt
   release-1.4.0.txt
   release-1.4.0beta.txt
   release-1.4.1.txt


   .. The following stuff is old (and crufty?), and needs further investigation:
   buildtool.txt
   distribution.txt
   eventhistory.txt
     .. ^^ Incomplete,  superceded elsewhere

   externaltools.txt
     .. ^^ Incomplete and wrong,  superceded elsewhere

   geninterp.txt
     .. ^^ apparently dead

   objspace-proxies.txt

   old_news.txt

   project-ideas.txt

   rffi.txt


Getting into PyPy ... 
=============================================

* `Release 1.4`_: the latest official release

* `PyPy Blog`_: news and status info about PyPy 

* `Documentation`_: extensive documentation and papers_ about PyPy.  

* `Getting Started`_: Getting started and playing with PyPy. 

Mailing lists, bug tracker, IRC channel
=============================================

* `Development mailing list`_: development and conceptual
  discussions. 

* `Subversion commit mailing list`_: updates to code and
  documentation. 

* `Development bug/feature tracker`_: filing bugs and feature requests. 

* `Sprint mailing list`_: mailing list for organizing upcoming sprints. 

* **IRC channel #pypy on freenode**: Many of the core developers are hanging out 
  at #pypy on irc.freenode.net.  You are welcome to join and ask questions
  (if they are not already developed in the FAQ_).
  You can find logs of the channel here_.

.. XXX play1? 

Meeting PyPy developers
=======================

The PyPy developers are organizing sprints and presenting results at
conferences all year round. They will be happy to meet in person with
anyone interested in the project.  Watch out for sprint announcements
on the `development mailing list`_.

.. _Python: http://docs.python.org/index.html
.. _`more...`: architecture.html#mission-statement 
.. _`PyPy blog`: http://morepypy.blogspot.com/
.. _`development bug/feature tracker`: https://codespeak.net/issue/pypy-dev/ 
.. _here: http://tismerysoft.de/pypy/irc-logs/pypy
.. _`sprint mailing list`: http://codespeak.net/mailman/listinfo/pypy-sprint 
.. _`subversion commit mailing list`: http://codespeak.net/mailman/listinfo/pypy-svn
.. _`development mailing list`: http://codespeak.net/mailman/listinfo/pypy-dev
.. _`FAQ`: faq.html
.. _`Documentation`: docindex.html 
.. _`Getting Started`: getting-started.html
.. _papers: extradoc.html
.. _`Release 1.4`: http://pypy.org/download.html

Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
* :ref:`glossary`

